return (function()
    local Players = game:GetService("Players")
    local RunService = game:GetService("RunService")
    local Camera = workspace.CurrentCamera
    local LocalPlayer = Players.LocalPlayer

    local ESP = {}
    ESP.Settings = {
        Enabled = true,
        Box = {
            Enabled = true,
            Color = Color3.new(1, 0, 0),
            Filled = true,
            FilledColor1 = Color3.fromRGB(255, 0, 0),
            FilledColor2 = Color3.fromRGB(100, 0, 0),
        },
        HealthBar = {
            Enabled = true,
            Width = 6,
            Color1 = Color3.new(0, 1, 0),
            Color2 = Color3.new(1, 0, 0),
        },
        HealthText = {
            Enabled = true,
            Color = Color3.new(1, 1, 1),
        },
        Name = {
            Enabled = true,
            Color = Color3.new(1, 1, 1),
        },
        Distance = {
            Enabled = true,
            Format = "studs",
            Color = Color3.new(1, 1, 1),
        },
        Weapon = {
            Enabled = true,
            Color = Color3.new(1, 1, 1),
        },
        Arrows = {
            Enabled = true,
            Radius = 100,
            Color = Color3.new(1, 0.5, 0),
        },
        Skeleton = {
            Enabled = true,
            Color = Color3.new(1, 1, 1),
            Thickness = 1,
        },
        Chams = {
            Enabled = true,
            Color = Color3.new(1, 0, 0),
            Transparency = 0.5,
        }
    }

    local ESPTable = {}

    local function NewDrawing(class)
        local suc, obj = pcall(function() return Drawing.new(class) end)
        if suc then return obj end
        return nil
    end

    local function CreateESP(player)
        if ESPTable[player] then return ESPTable[player] end

        local esp = {}

        esp.Box = NewDrawing("Square")
        esp.Box.Filled = false
        esp.Box.Thickness = 2

        esp.BoxFilled = NewDrawing("Square")
        esp.BoxFilled.Filled = true
        esp.BoxFilled.Transparency = 0.7

        esp.HealthBarBack = NewDrawing("Line")
        esp.HealthBarFillTop = NewDrawing("Line")
        esp.HealthBarFillBottom = NewDrawing("Line")

        esp.HealthText = NewDrawing("Text")
        esp.HealthText.Size = 14
        esp.HealthText.Center = true
        esp.HealthText.Outline = true

        esp.Name = NewDrawing("Text")
        esp.Name.Size = 16
        esp.Name.Center = true
        esp.Name.Outline = true

        esp.DistanceText = NewDrawing("Text")
        esp.DistanceText.Size = 14
        esp.DistanceText.Center = true
        esp.DistanceText.Outline = true

        esp.WeaponText = NewDrawing("Text")
        esp.WeaponText.Size = 14
        esp.WeaponText.Center = true
        esp.WeaponText.Outline = true

        esp.Arrows = {}
        for i = 1, 3 do
            local tri = NewDrawing("Triangle")
            tri.Filled = true
            esp.Arrows[i] = tri
        end

        esp.Skeleton = {}
        for i = 1, 15 do
            esp.Skeleton[i] = NewDrawing("Line")
            esp.Skeleton[i].Thickness = ESP.Settings.Skeleton.Thickness
            esp.Skeleton[i].Color = ESP.Settings.Skeleton.Color
        end

        if ESP.Settings.Chams.Enabled then
            esp.Highlight = Instance.new("Highlight")
            esp.Highlight.FillColor = ESP.Settings.Chams.Color
            esp.Highlight.OutlineTransparency = 1
            esp.Highlight.FillTransparency = ESP.Settings.Chams.Transparency
            esp.Highlight.Adornee = player.Character
            esp.Highlight.Parent = workspace
        end

        ESPTable[player] = esp
        return esp
    end

    local function RemoveESP(player)
        local esp = ESPTable[player]
        if not esp then return end

        for _, v in pairs(esp) do
            if typeof(v) == "table" then
                for _, d in pairs(v) do
                    d.Visible = false
                    if d.Remove then
                        d:Remove()
                    end
                end
            else
                if typeof(v) == "Instance" then
                    v:Destroy()
                else
                    v.Visible = false
                    if v.Remove then
                        v:Remove()
                    end
                end
            end
        end
        ESPTable[player] = nil
    end

    local function GetSkeletonParts(character)
        local parts = {}
        if character:FindFirstChild("Humanoid") and character.Humanoid.RigType == Enum.HumanoidRigType.R6 then
            local function GetPos(name) local p = character:FindFirstChild(name) return p and p.Position or nil end
            parts.Head = GetPos("Head")
            parts.Torso = GetPos("Torso")
            parts.LeftArm = GetPos("Left Arm")
            parts.RightArm = GetPos("Right Arm")
            parts.LeftLeg = GetPos("Left Leg")
            parts.RightLeg = GetPos("Right Leg")
            parts.Root = GetPos("Torso")
        else
            local function GetPos(name) local p = character:FindFirstChild(name) or character:FindFirstChild(name) return p and p.Position or nil end
            parts.Head = GetPos("Head")
            parts.UpperTorso = GetPos("UpperTorso")
            parts.LowerTorso = GetPos("LowerTorso")
            parts.LeftUpperArm = GetPos("LeftUpperArm")
            parts.LeftLowerArm = GetPos("LeftLowerArm")
            parts.LeftHand = GetPos("LeftHand")
            parts.RightUpperArm = GetPos("RightUpperArm")
            parts.RightLowerArm = GetPos("RightLowerArm")
            parts.RightHand = GetPos("RightHand")
            parts.LeftUpperLeg = GetPos("LeftUpperLeg")
            parts.LeftLowerLeg = GetPos("LeftLowerLeg")
            parts.LeftFoot = GetPos("LeftFoot")
            parts.RightUpperLeg = GetPos("RightUpperLeg")
            parts.RightLowerLeg = GetPos("RightLowerLeg")
            parts.RightFoot = GetPos("RightFoot")
            parts.Root = GetPos("HumanoidRootPart")
        end
        return parts
    end

    local function DrawSkeleton(esp, parts)
        local function DrawLine(idx, fromPos, toPos)
            if fromPos and toPos then
                local fromScreen, onScreenFrom = Camera:WorldToViewportPoint(fromPos)
                local toScreen, onScreenTo = Camera:WorldToViewportPoint(toPos)
                if onScreenFrom and onScreenTo then
                    esp.Skeleton[idx].From = Vector2.new(fromScreen.X, fromScreen.Y)
                    esp.Skeleton[idx].To = Vector2.new(toScreen.X, toScreen.Y)
                    esp.Skeleton[idx].Visible = true
                    esp.Skeleton[idx].Color = ESP.Settings.Skeleton.Color
                    return
                end
            end
            esp.Skeleton[idx].Visible = false
        end

        if not parts.Head then return end

        local rig = parts.Root and parts.Root.Parent
        if rig and rig:FindFirstChild("Humanoid") and rig.Humanoid.RigType == Enum.HumanoidRigType.R6 then
            DrawLine(1, parts.Head, parts.Torso)
            DrawLine(2, parts.Torso, parts.LeftArm)
            DrawLine(3, parts.Torso, parts.RightArm)
            DrawLine(4, parts.Torso, parts.LeftLeg)
            DrawLine(5, parts.Torso, parts.RightLeg)
            for i=6,15 do esp.Skeleton[i].Visible = false end
        else
            DrawLine(1, parts.Head, parts.UpperTorso)
            DrawLine(2, parts.UpperTorso, parts.LowerTorso)
            DrawLine(3, parts.LowerTorso, parts.Root)
            DrawLine(4, parts.UpperTorso, parts.LeftUpperArm)
            DrawLine(5, parts.LeftUpperArm, parts.LeftLowerArm)
            DrawLine(6, parts.LeftLowerArm, parts.LeftHand)
            DrawLine(7, parts.UpperTorso, parts.RightUpperArm)
            DrawLine(8, parts.RightUpperArm, parts.RightLowerArm)
            DrawLine(9, parts.RightLowerArm, parts.RightHand)
            DrawLine(10, parts.LowerTorso, parts.LeftUpperLeg)
            DrawLine(11, parts.LeftUpperLeg, parts.LeftLowerLeg)
            DrawLine(12, parts.LeftLowerLeg, parts.LeftFoot)
            DrawLine(13, parts.LowerTorso, parts.RightUpperLeg)
            DrawLine(14, parts.RightUpperLeg, parts.RightLowerLeg)
            DrawLine(15, parts.RightLowerLeg, parts.RightFoot)
        end
    end

    local function GetEquippedTool(character)
        for _, tool in pairs(character:GetChildren()) do
            if tool:IsA("Tool") then
                return tool.Name
            end
        end
        return ""
    end

    local function DrawBox(esp, topLeft, bottomRight)
        local size = Vector2.new(bottomRight.X - topLeft.X, bottomRight.Y - topLeft.Y)

        esp.Box.Color = ESP.Settings.Box.Color
        esp.Box.Visible = ESP.Settings.Box.Enabled
        esp.Box.Thickness = 2
        esp.Box.From = topLeft
        esp.Box.Size = size
        esp.Box.Filled = false

        if ESP.Settings.Box.Filled then
            esp.BoxFilled.From = topLeft
            esp.BoxFilled.Size = size
            esp.BoxFilled.Visible = true
            esp.BoxFilled.Color = ESP.Settings.Box.FilledColor1:Lerp(ESP.Settings.Box.FilledColor2, math.abs(math.sin(tick() * 3)))
            esp.BoxFilled.Transparency = 0.5
        else
            esp.BoxFilled.Visible = false
        end
    end

    local function DrawHealthBar(esp, topLeft, bottomRight, healthPercent, health)
        if not ESP.Settings.HealthBar.Enabled then
            esp.HealthBarBack.Visible = false
            esp.HealthBarFillTop.Visible = false
            esp.HealthBarFillBottom.Visible = false
            esp.HealthText.Visible = false
            return
        end

        local barHeight = bottomRight.Y - topLeft.Y
        local barWidth = ESP.Settings.HealthBar.Width
        local x = topLeft.X - barWidth - 4
        local y = topLeft.Y

        esp.HealthBarBack.From = Vector2.new(x, y)
        esp.HealthBarBack.To = Vector2.new(x, y + barHeight)
        esp.HealthBarBack.Color = Color3.new(0, 0, 0)
        esp.HealthBarBack.Thickness = barWidth
        esp.HealthBarBack.Visible = true

        -- Gradient top to bottom color interpolation
        local c1 = ESP.Settings.HealthBar.Color1
        local c2 = ESP.Settings.HealthBar.Color2
        local currentColor = c1:Lerp(c2, 1 - healthPercent)

        esp.HealthBarFillTop.From = Vector2.new(x, y)
        esp.HealthBarFillTop.To = Vector2.new(x, y + barHeight * healthPercent)
        esp.HealthBarFillTop.Color = currentColor
        esp.HealthBarFillTop.Thickness = barWidth
        esp.HealthBarFillTop.Visible = true

        esp.HealthBarFillBottom.From = Vector2.new(x, y + barHeight * healthPercent)
        esp.HealthBarFillBottom.To = Vector2.new(x, y + barHeight)
        esp.HealthBarFillBottom.Color = c2
        esp.HealthBarFillBottom.Thickness = barWidth
        esp.HealthBarFillBottom.Visible = true

        -- Health text
        if ESP.Settings.HealthText.Enabled then
            esp.HealthText.Text = tostring(math.floor(health))
            esp.HealthText.Position = Vector2.new(x - 10, y + barHeight * healthPercent)
            esp.HealthText.Color = Color3.new(1,1,1)
            esp.HealthText.Visible = true
        else
            esp.HealthText.Visible = false
        end
    end

    local function DrawName(esp, topLeft, name)
        if ESP.Settings.Name.Enabled then
            esp.Name.Text = name
            esp.Name.Position = Vector2.new(topLeft.X + (esp.Box.Size.X / 2), topLeft.Y - 18)
            esp.Name.Color = ESP.Settings.Name.Color
            esp.Name.Visible = true
        else
            esp.Name.Visible = false
        end
    end

    local function DrawDistance(esp, bottomRight, distance)
        if ESP.Settings.Distance.Enabled then
            esp.DistanceText.Text = tostring(math.floor(distance)).." "..ESP.Settings.Distance.Format
            esp.DistanceText.Position = Vector2.new(bottomRight.X - (esp.DistanceText.TextBounds.X / 2), bottomRight.Y + 5)
            esp.DistanceText.Color = ESP.Settings.Distance.Color
            esp.DistanceText.Visible = true
        else
            esp.DistanceText.Visible = false
        end
    end

    local function DrawWeapon(esp, bottomRight, weapon)
        if ESP.Settings.Weapon.Enabled and weapon ~= "" then
            esp.WeaponText.Text = weapon
            esp.WeaponText.Position = Vector2.new(bottomRight.X - (esp.WeaponText.TextBounds.X / 2), bottomRight.Y + 22)
            esp.WeaponText.Color = ESP.Settings.Weapon.Color
            esp.WeaponText.Visible = true
        else
            esp.WeaponText.Visible = false
        end
    end

    local function DrawArrows(esp, screenPos, direction)
        if not ESP.Settings.Arrows.Enabled then
            for _, arrow in pairs(esp.Arrows) do
                arrow.Visible = false
            end
            return
        end

        local center = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2)
        local radius = ESP.Settings.Arrows.Radius

        local arrowPos = center + direction.Unit * radius
        local size = 20

        for _, arrow in pairs(esp.Arrows) do
            arrow.Visible = false
        end

        local arrow1 = esp.Arrows[1]
        arrow1.PointA = arrowPos + Vector2.new(0, -size / 2)
        arrow1.PointB = arrowPos + Vector2.new(size / 2, size / 2)
        arrow1.PointC = arrowPos + Vector2.new(-size / 2, size / 2)
        arrow1.Color = ESP.Settings.Arrows.Color
        arrow1.Visible = true
    end

    local function OnRenderStep()
        if not ESP.Settings.Enabled then
            for player, esp in pairs(ESPTable) do
                RemoveESP(player)
            end
            return
        end

        for _, player in pairs(Players:GetPlayers()) do
            if player == LocalPlayer then
                RemoveESP(player)
                continue
            end

            local character = player.Character
            if not character or not character.Parent then
                RemoveESP(player)
                continue
            end

            local humanoid = character:FindFirstChildWhichIsA("Humanoid")
            local root = character:FindFirstChild("HumanoidRootPart") or character:FindFirstChild("Torso") or character:FindFirstChild("UpperTorso")
            if not humanoid or not root then
                RemoveESP(player)
                continue
            end

            local esp = CreateESP(player)

            local rootPos, onScreen = Camera:WorldToViewportPoint(root.Position)
            if onScreen then
                -- Hide arrows
                for _, arrow in pairs(esp.Arrows) do
                    arrow.Visible = false
                end

                local boxHeight = 140
                local boxWidth = 60
                local topLeft = Vector2.new(rootPos.X - boxWidth / 2, rootPos.Y - boxHeight)
                local bottomRight = Vector2.new(rootPos.X + boxWidth / 2, rootPos.Y)

                DrawBox(esp, topLeft, bottomRight)

                local healthPercent = math.clamp(humanoid.Health / humanoid.MaxHealth, 0, 1)
                DrawHealthBar(esp, topLeft, bottomRight, healthPercent, humanoid.Health)

                DrawName(esp, topLeft, player.Name)

                local distance = (Camera.CFrame.Position - root.Position).Magnitude
                DrawDistance(esp, bottomRight, distance)

                DrawWeapon(esp, bottomRight, GetEquippedTool(character))

                if ESP.Settings.Skeleton.Enabled then
                    DrawSkeleton(esp, GetSkeletonParts(character))
                else
                    for _, line in pairs(esp.Skeleton) do
                        line.Visible = false
                    end
                end
            else
                -- Offscreen arrows
                local direction = (root.Position - Camera.CFrame.Position)
                DrawArrows(esp, Vector2.new(rootPos.X, rootPos.Y), direction)
                for _, line in pairs(esp.Skeleton) do
                    line.Visible = false
                end
                esp.Box.Visible = false
                esp.BoxFilled.Visible = false
                esp.HealthBarBack.Visible = false
                esp.HealthBarFillTop.Visible = false
                esp.HealthBarFillBottom.Visible = false
                esp.HealthText.Visible = false
                esp.Name.Visible = false
                esp.DistanceText.Visible = false
                esp.WeaponText.Visible = false
            end
        end
    end

    RunService.RenderStepped:Connect(OnRenderStep)

    Players.PlayerRemoving:Connect(RemoveESP)
    Players.PlayerAdded:Connect(function(player)
        player.CharacterAdded:Connect(function()
            wait(1)
            if ESP.Settings.Enabled then
                CreateESP(player)
            end
        end)
    end)

    return ESP
end)()
